# 参数解析后对应的实体类
args.class=org.cime.common.cli.bean.Args
# 需要解析的参数,以竖线分隔
args.columns=ip|port|password|threadCount|workType|batchCount|maxSize|valueSize|dumpFilePath|slotSet\
  |extendFilePath|count|interval|duration|monitorType|statePort|keyPrefix
# redis服务器IP地址
ip.opt=i
ip.longOpt=ip
ip.hasArgs=true
ip.desc=set redis server ip, default:127.0.0.1
ip.isRequired=false
ip.defaultValue=127.0.0.1
ip.pattern=(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d)\\.\
  (25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d)
# redis服务器端口
port.opt=p
port.longOpt=port
port.hasArgs=true
port.desc=set redis server port, default:6379
port.isRequired=false
port.defaultValue=6379
port.pattern=[1-9]\\d*
# redis服务器密码（预留,未实现）
password.opt=P
password.longOpt=password
password.hasArgs=true
password.desc=database password
password.isRequired=false
password.defaultValue=123456
password.pattern=[\\S]+
# 工作线程数
threadCount.opt=t
threadCount.longOpt=thread
threadCount.hasArgs=true
threadCount.desc=set work thread count, default: 4
threadCount.isRequired=false
threadCount.defaultValue=4
threadCount.pattern=[1-9][\\d]{0,4}
# 工作线程类型
workType.opt=w
workType.longOpt=work-type
workType.hasArgs=true
workType.desc=set work type the work thread going to do, support: set, cmpset, stable; default:set
workType.isRequired=false
workType.defaultValue=set
workType.pattern=[\\S]*
# 单次批处理数据条数
batchCount.opt=b
batchCount.longOpt=batch-count
batchCount.hasArgs=true
batchCount.desc=batch count to pipeline,default:1000
batchCount.isRequired=false
batchCount.defaultValue=1000
batchCount.pattern=[1-9][\\d]*
# 最大写入数据量
maxSize.opt=m
maxSize.longOpt=max-size
maxSize.hasArgs=true
maxSize.desc=set max value size(byte) to write, unit: k,kb,KB,m,mb,MB,g,gb,GB, default:100M
maxSize.isRequired=false
maxSize.defaultValue=100m
maxSize.pattern=[1-9][\\d]*(([kKMmGg][bB]?)|([bB]?))
maxSize.parser=org.cime.common.cli.parser.SizeParser
# 值长度
valueSize.opt=v
valueSize.longOpt=value-size
valueSize.hasArgs=true
valueSize.desc=set per value size(byte), unit: b,B,k,kb,KB,m,mb,MB,g,gb,GB, default:16K
valueSize.isRequired=false
valueSize.defaultValue=16k
valueSize.pattern=[1-9][\\d]*(([kKMmGg][bB]?)|([bB]?))
valueSize.parser=org.cime.common.cli.parser.SizeParser
# dump文件路径
dumpFilePath.opt=d
dumpFilePath.longOpt=dump-file
dumpFilePath.hasArgs=true
dumpFilePath.desc=set key-value dump file path, default:
dumpFilePath.isRequired=false
dumpFilePath.defaultValue=
dumpFilePath.pattern=[\\S]*
# slot编号
slotSet.opt=s
slotSet.longOpt=slot
slotSet.hasArgs=true
slotSet.desc=set target slot to write, use "," to separate mutily slot, default:-1
slotSet.isRequired=false
slotSet.defaultValue=
slotSet.pattern=[\\S]*
slotSet.parser=org.cime.common.cli.parser.IntSetParser
# 扩展文件路径（预留,未实现）
extendFilePath.opt=e
extendFilePath.longOpt=extend-file
extendFilePath.hasArgs=true
extendFilePath.desc=set config file path of extend functions, default:null
extendFilePath.isRequired=false
extendFilePath.defaultValue=
extendFilePath.pattern=[\\S]*
# 写入的总数据条数
count.opt=c
count.longOpt=count
count.hasArgs=true
count.desc=total data count to handle,default:0
count.isRequired=false
count.defaultValue=0
count.pattern=0|([1-9][\\d]*)
# 每次处理完一条数据后,需要等待的间隔,用于调节qps
interval.opt=I
interval.longOpt=interval
interval.hasArgs=true
interval.desc=the interval of each operation,default:0
interval.isRequired=false
interval.defaultValue=0
interval.pattern=0|([1-9][\\d]*)
# 长稳测试持续时间
duration.opt=D
duration.longOpt=duration
duration.hasArgs=true
duration.desc=the duration time of stable worker,unit: d(day),h(hour),m(minute),s(second); default:1m
duration.isRequired=false
duration.defaultValue=1m
duration.pattern=[1-9][\\d]*[dDhHmMsS]?
duration.parser=org.cime.common.cli.parser.DurationParser
# 数据写入时的监控类型
monitorType.opt=M
monitorType.longOpt=monitor-type
monitorType.hasArgs=true
monitorType.desc=set monitor thread type ,support: pmonitor(proxy),rmonitor(redis); default:null
monitorType.isRequired=false
monitorType.defaultValue=
monitorType.pattern=[\\S]*
# 如果监控类型是pmonitor,则需要指定proxy状态端口
statePort.opt=S
statePort.longOpt=state-port
statePort.hasArgs=true
statePort.desc=set state port of proxy, default:0
statePort.isRequired=false
statePort.defaultValue=0
statePort.pattern=[0-9][\\d]*
# 用于为生成的key指定前缀
keyPrefix.opt=k
keyPrefix.longOpt=key-prefix
keyPrefix.hasArgs=true
keyPrefix.desc=set key prefix when generate a key, default:null
keyPrefix.isRequired=false
keyPrefix.defaultValue=
keyPrefix.pattern=[\\S]*